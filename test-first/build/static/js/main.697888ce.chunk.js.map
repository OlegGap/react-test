{"version":3,"sources":["components/hoverTable/Cell.js","components/Conditioner.js","components/Timer.js","components/hoverTable/index.js","index.js"],"names":["Cell","React","Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouse","state","cellStyle","background","setState","react_default","a","createElement","className","onMouseOver","style","HoverTable","items","Array","cellColor","i","push","hoverTable_Cell","color","key","Math","random","ReactDOM","render","react","hoverTable","document","getElementById"],"mappings":"mMAwBeA,GCtBWC,IAAMC,UCEZD,IAAMC,sBFCvB,SAAAF,IAAc,IAAAG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACXG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,QAQHI,YAAc,WACyB,YAApCP,EAAKQ,MAAMC,UAAUC,WAA2BV,EAAKW,SAAS,CAAEF,UAAW,CAAEC,WAAY,aAAiBV,EAAKW,SAAS,CAAEF,UAAW,CAAEC,WAAY,cARnJV,EAAKQ,MAAQ,CACVC,UAAW,CACRC,WAAY,YAJPV,wEAaX,OACGY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBC,YAAab,KAAKI,YAAaU,MAAOd,KAAKK,MAAMC,mBAf1EX,IAAMC,YGuBVmB,qBAtBX,SAAAA,IAAc,IAAAlB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,IACVlB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiB,GAAAZ,KAAAH,QACKgB,MAAQ,IAAIC,MAAM,IACvBpB,EAAKQ,MAAQ,CACTa,UAAW,OAJLrB,wEAWV,IAFA,IAAMmB,EAAQ,GAELG,EAAI,EAAGA,EAAI,IAAKA,IACrBH,EAAMI,KAAKX,EAAAC,EAAAC,cAACU,EAAD,CAAMC,MAAOtB,KAAKK,MAAMa,UAAYK,IAAK,GAAGC,KAAKC,YAEhE,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACVI,UAjBQrB,IAAMC,YCI/B8B,IAASC,OACPlB,EAAAC,EAAAC,cAACiB,EAAA,SAAD,KAKCnB,EAAAC,EAAAC,cAACkB,EAAD,OAEDC,SAASC,eAAe","file":"static/js/main.697888ce.chunk.js","sourcesContent":["import React from \"react\";\n\n\n\nclass Cell extends React.Component {\n   constructor() {\n      super();\n      this.state = {\n         cellStyle: {\n            background: '#B26EB2',\n         }\n      }\n   }\n\n   handleMouse = () => {\n      this.state.cellStyle.background === '#B26EB2' ? this.setState({ cellStyle: { background: '#ADF1D2' } }) : this.setState({ cellStyle: { background: '#B26EB2' } });\n   }\n   render() {\n      return (\n         <div className='hover-table__cell' onMouseOver={this.handleMouse} style={this.state.cellStyle} ></div>\n      )\n   }\n};\n\nexport default Cell;\n","import React from \"react\";\n\nclass Conditioner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { temperature: 0 };\n\n    this.onIncrease = this.onIncrease.bind(this);\n    this.onDecrease = this.onDecrease.bind(this);\n  }\n\n  onIncrease() {\n    this.setState(prevState => ({\n      temperature: prevState.temperature + 1\n    }));\n  }\n\n  onDecrease() {\n    console.log(this);\n    \n    this.setState(function(prevState) {\n      if (prevState.temperature === 0) {\n        return { temperature: prevState.temperature };\n      } else {\n        return { temperature: prevState.temperature - 1 };\n      }\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h2>Текущая температура: {this.state.temperature}</h2>\n        <button onClick={this.onDecrease}>-</button>\n        <button onClick={this.onIncrease}>+</button>\n      </div>\n    );\n  }\n}\n\nexport default Conditioner;\n","import React from \"react\";\n\nconst INTERVAL = 100;\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: 0 };\n  }\n\n  increment() {\n    this.setState({ value: this.state.value + 1 });\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.increment(), 1000 / INTERVAL);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    const value = this.state.value;\n    return (\n      <div>\n        <p>Таймер:</p>\n        <p>\n          <span>{Math.round(value / INTERVAL / 60 / 60)} : </span>\n          <span>{Math.round(value / INTERVAL / 60)} : </span>\n          <span>{Math.round(value / INTERVAL)} . </span>\n          <span>{value % INTERVAL}</span>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from \"react\";\nimport Cell from './Cell'\nimport './style.css'\n\nclass HoverTable extends React.Component {\n    constructor() {\n        super();\n        this.items = new Array(20);\n        this.state = {\n            cellColor: 'red',\n        }\n    }\n\n    render() {\n        const items = []\n\n        for (let i = 0; i < 900; i++) {\n            items.push(<Cell color={this.state.cellColor}  key={''+Math.random()} />)\n        }\n        return (\n            <div className='hover-table-container'>\n                {items}\n            </div>\n        )\n    }\n}\n\nexport default HoverTable;","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Conditioner from \"./components/Conditioner\";\nimport Timer from \"./components/Timer\"; \nimport HoverTabel from \"./components/hoverTable/index.js\";\n\n\nReactDOM.render(\n  <Fragment>\n    {/* <App name=\"Oleg\" />\n    <Conditioner />\n    <p></p>\n    <Timer /> */}\n   <HoverTabel />\n  </Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}